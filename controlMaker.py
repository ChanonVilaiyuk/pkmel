import maya.cmds as mc
import maya.mel as mm
from functools import partial

def run() :
	# ControlMaker call back
	ui = ControlMaker()
	ui.show()

class ControlMaker( object ) :
	
	def __init__( self ) :
		
		print 'Script for creating controller.\nCreated by peckpeckpeckpeckpeck@gmail.com'
		self.ui = 'ControlMaker'
		self.win = '%sWin' % self.ui
	
	def show( self ) :
		
		if mc.window( self.win , exists=True ) :
			mc.deleteUI( self.win )
		
		mc.window( self.win , t='pkControlMaker' , rtf=True )
		
		mc.columnLayout( '%sMainCL'%self.ui , adj=True )
		
		mc.button( '%sCurveBUT'%self.ui , l='plus' , w=50 , h=100 , c=partial( self.createCurve ) )
		
		mc.popupMenu()
		
		labels = ( 'plus' , 'crossArrow' , 'circle' , 'cube' ,
			'capsule' , 'stick' , 'doubleStick' , 'square' )
		
		for label in labels :
			mc.menuItem( l=label , c=partial( self.changeButLabel , label ) )
		
		nc = 6
		wid = 180
		cw = ( wid / nc )
		mc.rowLayout( numberOfColumns=nc , columnWidth6=(cw,cw,cw,cw,cw,cw) )
		mc.button( w=cw , l='N' , c=partial(self.assignColor,'none') )
		mc.button( w=cw , l='R' , bgc=[1,0,0] , c=partial(self.assignColor,'red') )
		mc.button( w=cw , l='G' , bgc=[0,1,0] , c=partial(self.assignColor,'green') )
		mc.button( w=cw , l='B' , bgc=[0,0,1] , c=partial(self.assignColor,'blue') )
		mc.button( w=cw , l='Y' , bgc=[1,1,0] , c=partial(self.assignColor,'yellow') )
		mc.button( w=cw , l='W' , bgc=[1,1,1] , c=partial(self.assignColor,'white') )
		
		mc.showWindow( self.win )
		mc.window( self.win , e=True , w=wid+8 )
		mc.window( self.win , e=True , h=150 )
	
	def assignColor( self , col='' , arg=None ) :
		
		colDic = {
						'yellow' : 17 ,
						'red' : 13 ,
						'softBlue' : 18 ,
						'blue' : 6 ,
						'white' : 16 ,
						'brown' : 11 ,
						'black' : 1 ,
						'gray' : 2 ,
						'softGray' : 3 ,
						'darkRed' : 4 ,
						'darkBlue' : 5 ,
						'darkGreen' : 7 ,
						'green' : 14 ,
						'none' : 0
					}
		
		cid = colDic[ col ]
		sels = mc.ls( sl=True )
		
		for sel in sels :
			
			shps = mc.listRelatives( sel , s=True )
			
			if shps :
				
				for shp in shps :
					
					if col == 'none' :
						mc.setAttr( '%s.overrideColor' % shp , cid )
						mc.setAttr( '%s.overrideEnabled' % shp , 0 )
					else :
						mc.setAttr( '%s.overrideEnabled' % shp , 1 )
						mc.setAttr( '%s.overrideColor' % shp , cid )
	
	def createCurve( self , arg=None ) :
		
		label = mc.button( '%sCurveBUT'%self.ui , q=True , l=True )
		
		parameter = self.curveParameter( curveType=label )
		
		# sels = mc.ls( sl=True )
		
		# if sels :
			
		# 	for sel in sels :
								
		# 		if mc.nodeType( sel ) in ( 'joint' , 'transform' ) :
					
		# 			crv = mc.curve( p=parameter , d=1 )
		# 			crvShp = mc.listRelatives( crv , s=True )[0]
		# 			mc.parent( crvShp , sel , s=True , r=True )
					
		# 			mc.delete( crv )
		# 			mc.rename( crvShp , '%sShape' % sel )
		# else :
			
		# 	crv = mc.curve( p=parameter , d=1 )

		crv = mc.curve( p=parameter , d=1 )
	
	def changeButLabel( self , label='' , arg=None ) :
		
		mc.button( '%sCurveBUT'%self.ui , e=True , l=label )
	
	def curveParameter( self , curveType='' , arg=None ) :
		
		if curveType == 'crossArrow' :
			parameter = [(0,0,-2.192969),(0.851882,0,-1.266891),(0.511129,0,-1.266891),
				(0.511129,0,-0.633446),(0.633446,0,-0.511129),(1.266891,0,-0.511129),
				(1.266891,0,-0.851882),(2.192969,0,0),(1.266891,0,0.851882),(1.266891,0,0.511129),
				(0.633446,0,0.511129),(0.511129,0,0.633446),(0.511129,0,1.266891),(0.851882,0,1.266891),
				(0,0,2.192969),(-0.851882,0,1.266891),(-0.511129,0,1.266891),(-0.511129,0,0.633446),
				(-0.633446,0,0.511129),(-1.266891,0,0.511129),(-1.266891,0,0.851882),(-2.192969,0,0),
				(-1.266891,0,-0.851882),(-1.266891,0,-0.511129),(-0.633446,0,-0.511129),
				(-0.511129,0,-0.633446),(-0.511129,0,-1.266891),(-0.851882,0,-1.266891),(0,0,-2.192969)]
		
		elif curveType == 'plus' :
			parameter = [(0,1,0),(0,-1,0),(0,0,0),(-1,0,0),(1,0,0),(0,0,0),(0,0,-1),(0,0,1)]
		
		elif curveType == 'circle' :
			parameter = [(1.125,0,0),(1.004121,0,0),(0.991758,0,-0.157079),(0.954976,0,-0.31029),
				(0.894678,0,-0.455861),(0.812351,0,-0.590207),(0.710021,0,-0.710021),
				(0.590207,0,-0.812351),(0.455861,0,-0.894678),(0.31029,0,-0.954976),
				(0.157079,0,-0.991758),(0,0,-1.004121),(0,0,-1.125),(0,0,-1.004121),
				(-0.157079,0,-0.991758),(-0.31029,0,-0.954976),(-0.455861,0,-0.894678),
				(-0.590207,0,-0.812351),(-0.710021,0,-0.710021),(-0.812351,0,-0.590207),
				(-0.894678,0,-0.455861),(-0.954976,0,-0.31029),(-0.991758,0,-0.157079),
				(-1.004121,0,0),(-1.125,0,0),(-1.004121,0,0),(-0.991758,0,0.157079),
				(-0.954976,0,0.31029),(-0.894678,0,0.455861),(-0.812351,0,0.590207),
				(-0.710021,0,0.710021),(-0.590207,0,0.812351),(-0.455861,0,0.894678),
				(-0.31029,0,0.954976),(-0.157079,0,0.991758),(0,0,1.004121),(0,0,1.125),
				(0,0,1.004121),(0.157079,0,0.991758),(0.31029,0,0.954976),(0.455861,0,0.894678),
				(0.590207,0,0.812351),(0.710021,0,0.710021),(0.812351,0,0.590207),(0.894678,0,0.455861),
				(0.954976,0,0.31029),(0.991758,0,0.157079),(1.004121,0,0)]
		
		elif curveType == 'cube' :
			parameter = [(1,-1,1),(1,1,1),(1,1,-1),(1,-1,-1),(-1,-1,-1),(-1,1,-1),(-1,1,1),(-1,-1,1),
			(1,-1,1),(1,-1,-1),(-1,-1,-1),(-1,-1,1),(-1,1,1),(1,1,1),(1,1,-1),(-1,1,-1)]
		
		elif curveType == 'capsule' :
			parameter = [(-2.011489,0,0),(-1.977023,0.261792,0),(-1.875975,0.505744,0),
			(-1.71523,0.71523,0),(-1.505744,0.875975,0),(-1.261792,0.977023,0),(-1,1.011489,0),
			(1,1.011489,0),(1.261792,0.977023,0),(1.505744,0.875975,0),(1.71523,0.71523,0),
			(1.875975,0.505744,0),(1.977023,0.261792,0),(2.011489,0,0),(1.977023,-0.261792,0),
			(1.875975,-0.505744,0),(1.71523,-0.71523,0),(1.505744,-0.875975,0),(1.261792,-0.977023,0),
			(1,-1.011489,0),(-1,-1.011489,0),(-1.261792,-0.977023,0),(-1.505744,-0.875975,0),
			(-1.71523,-0.71523,0),(-1.875975,-0.505744,0),(-1.977023,-0.261792,0),(-2.011489,0,0)]
		
		elif curveType == 'stick' :
			parameter = [(0,0,0),(0,1.499085,0),(0.0523598,1.501829,0),(0.104146,1.510032,0),
			(0.154791,1.523602,0),(0.20374,1.542392,0),(0.250457,1.566195,0),(0.29443,1.594752,0),
			(0.335177,1.627748,0),(0.372252,1.664823,0),(0.405248,1.70557,0),(0.433805,1.749543,0),
			(0.457608,1.79626,0),(0.476398,1.845209,0),(0.489968,1.895854,0),(0.498171,1.94764,0),
			(0.500915,2,0),(0.498171,2.05236,0),(0.489968,2.104146,0),(0.476398,2.154791,0),
			(0.457608,2.20374,0),(0.433805,2.250457,0),(0.405248,2.29443,0),(0.372252,2.335177,0),
			(0.335177,2.372252,0),(0.29443,2.405248,0),(0.250457,2.433805,0),(0.20374,2.457608,0),
			(0.154791,2.476398,0),(0.104146,2.489968,0),(0.0523598,2.498171,0),(0,2.500915,0),
			(-0.0523598,2.498171,0),(-0.104146,2.489968,0),(-0.154791,2.476398,0),(-0.20374,2.457608,0),
			(-0.250457,2.433805,0),(-0.29443,2.405248,0),(-0.335177,2.372252,0),(-0.372252,2.335177,0),
			(-0.405248,2.29443,0),(-0.433805,2.250457,0),(-0.457608,2.20374,0),(-0.476398,2.154791,0),
			(-0.489968,2.104146,0),(-0.498171,2.05236,0),(-0.500915,2,0),(-0.498171,1.94764,0),
			(-0.489968,1.895854,0),(-0.476398,1.845209,0),(-0.457608,1.79626,0),(-0.433805,1.749543,0),
			(-0.405248,1.70557,0),(-0.372252,1.664823,0),(-0.335177,1.627748,0),(-0.29443,1.594752,0),
			(-0.250457,1.566195,0),(-0.20374,1.542392,0),(-0.154791,1.523602,0),(-0.104146,1.510032,0),
			(-0.0523598,1.501829,0),(0,1.499085,0)]
		
		elif curveType == 'sphere' :
			parameter = [(-1.5,0,0),(-1,0,0),(-0.965926,0.258819,0),(-0.866026,0.5,0),
			(-0.707107,0.707107,0),(-0.5,0.866025,0),(-0.258819,0.965926,0),(0,1,0),(0,1.5,0),(0,1,0),
			(0.258819,0.965926,0),(0.5,0.866025,0),(0.707107,0.707107,0),(0.866025,0.5,0),
			(0.965926,0.258819,0),(1,0,0),(1.5,0,0),(1,0,0),(0.965926,-0.258819,0),(0.866025,-0.5,0),
			(0.707107,-0.707107,0),(0.5,-0.866025,0),(0.258819,-0.965926,0),(0,-1,0),(0,-1.5,0),
			(0,-1,0),(-0.258819,-0.965926,0),(-0.5,-0.866025,0),(-0.707107,-0.707107,0),
			(-0.866026,-0.5,0),(-0.965926,-0.258819,0),(-1,0,0),(-0.951057,0,0.309017),
			(-0.809017,0,0.587785),(-0.587785,0,0.809017),(-0.309017,0,0.951057),(-2.98023e-08,0,1),
			(0,0,1.5),(-2.98023e-08,0,1),(0.309017,0,0.951057),(0.587785,0,0.809017),
			(0.809017,0,0.587785),(0.951057,0,0.309017),(1,0,0),(0.951057,0,-0.309017),
			(0.809018,0,-0.587786),(0.587786,0,-0.809017),(0.309017,0,-0.951057),(0,0,-1),
			(0,0,-1.5),(0,0,-1),(0,0.258819,-0.965926),(0,0.5,-0.866026),(0,0.707107,-0.707107),
			(0,0.866025,-0.5),(0,0.965926,-0.258819),(0,1,0),(-7.71341e-09,0.965926,0.258819),
			(-1.49012e-08,0.866025,0.5),(-2.10734e-08,0.707107,0.707107),(-2.58096e-08,0.5,0.866026),
			(-2.87868e-08,0.258819,0.965926),(-2.98023e-08,0,1),(-2.87868e-08,-0.258819,0.965926),
			(-2.58096e-08,-0.5,0.866026),(-2.10734e-08,-0.707107,0.707107),(-1.49012e-08,-0.866025,0.5),
			(-7.71341e-09,-0.965926,0.258819),(0,-1,0),(0,-0.965926,-0.258819),(0,-0.866025,-0.5),
			(0,-0.707107,-0.707107),(0,-0.5,-0.866026),(0,-0.258819,-0.965926),(0,0,-1),
			(-0.309017,0,-0.951057),(-0.587785,0,-0.809017),(-0.809017,0,-0.587785),
			(-0.951057,0,-0.309017),(-1,0,0)]
		
		elif curveType == 'square' :
			parameter = [(0,0,-1.12558),(0,0,-1),(-1,0,-1),(-1,0,0),(-1.12558,0,0),(-1,0,0),
			(-1,0,1),(0,0,1),(0,0,1.12558),(0,0,1),(1,0,1),(1,0,0),(1.12558,0,0),(1,0,0),
			(1,0,-1),(0,0,-1)]
		
		elif curveType == 'doubleStick' :
			parameter = [(0,-1.499085,0),(-0.0523598,-1.501829,0),(-0.104146,-1.510032,0),
			(-0.154791,-1.523602,0),(-0.20374,-1.542392,0),(-0.250457,-1.566195,0),
			(-0.29443,-1.594752,0),(-0.335177,-1.627748,0),(-0.372252,-1.664823,0),
			(-0.405248,-1.70557,0),(-0.433805,-1.749543,0),(-0.457608,-1.79626,0),
			(-0.476398,-1.845209,0),(-0.489968,-1.895854,0),(-0.498171,-1.94764,0),
			(-0.500915,-2,0),(-0.498171,-2.05236,0),(-0.489968,-2.104146,0),
			(-0.476398,-2.154791,0),(-0.457608,-2.20374,0),(-0.433805,-2.250457,0),
			(-0.405248,-2.29443,0),(-0.372252,-2.335177,0),(-0.335177,-2.372252,0),
			(-0.29443,-2.405248,0),(-0.250457,-2.433805,0),(-0.20374,-2.457608,0),
			(-0.154791,-2.476398,0),(-0.104146,-2.489968,0),(-0.0523598,-2.498171,0),
			(0,-2.500915,0),(0.0523598,-2.498171,0),(0.104146,-2.489968,0),
			(0.154791,-2.476398,0),(0.20374,-2.457608,0),(0.250457,-2.433805,0),
			(0.29443,-2.405248,0),(0.335177,-2.372252,0),(0.372252,-2.335177,0),
			(0.405248,-2.29443,0),(0.433805,-2.250457,0),(0.457608,-2.20374,0),
			(0.476398,-2.154791,0),(0.489968,-2.104146,0),(0.498171,-2.05236,0),
			(0.500915,-2,0),(0.498171,-1.94764,0),(0.489968,-1.895854,0),
			(0.476398,-1.845209,0),(0.457608,-1.79626,0),(0.433805,-1.749543,0),
			(0.405248,-1.70557,0),(0.372252,-1.664823,0),(0.335177,-1.627748,0),
			(0.29443,-1.594752,0),(0.250457,-1.566195,0),(0.20374,-1.542392,0),
			(0.154791,-1.523602,0),(0.104146,-1.510032,0),(0.0523598,-1.501829,0),
			(0,-1.499085,0),(0,0,0),(0,1.499085,0),(0.0523598,1.501829,0),
			(0.104146,1.510032,0),(0.154791,1.523602,0),(0.20374,1.542392,0),
			(0.250457,1.566195,0),(0.29443,1.594752,0),(0.335177,1.627748,0),
			(0.372252,1.664823,0),(0.405248,1.70557,0),(0.433805,1.749543,0),
			(0.457608,1.79626,0),(0.476398,1.845209,0),(0.489968,1.895854,0),
			(0.498171,1.94764,0),(0.500915,2,0),(0.498171,2.05236,0),
			(0.489968,2.104146,0),(0.476398,2.154791,0),(0.457608,2.20374,0),
			(0.433805,2.250457,0),(0.405248,2.29443,0),(0.372252,2.335177,0),
			(0.335177,2.372252,0),(0.29443,2.405248,0),(0.250457,2.433805,0),
			(0.20374,2.457608,0),(0.154791,2.476398,0),(0.104146,2.489968,0),
			(0.0523598,2.498171,0),(0,2.500915,0),(-0.0523598,2.498171,0),
			(-0.104146,2.489968,0),(-0.154791,2.476398,0),(-0.20374,2.457608,0),
			(-0.250457,2.433805,0),(-0.29443,2.405248,0),(-0.335177,2.372252,0),
			(-0.372252,2.335177,0),(-0.405248,2.29443,0),(-0.433805,2.250457,0),
			(-0.457608,2.20374,0),(-0.476398,2.154791,0),(-0.489968,2.104146,0),
			(-0.498171,2.05236,0),(-0.500915,2,0),(-0.498171,1.94764,0),
			(-0.489968,1.895854,0),(-0.476398,1.845209,0),(-0.457608,1.79626,0),
			(-0.433805,1.749543,0),(-0.405248,1.70557,0),(-0.372252,1.664823,0),
			(-0.335177,1.627748,0),(-0.29443,1.594752,0),(-0.250457,1.566195,0),
			(-0.20374,1.542392,0),(-0.154791,1.523602,0),(-0.104146,1.510032,0),
			(-0.0523598,1.501829,0),(0,1.499085,0)]
		
		elif curveType == 'grid' :
			parameter = [(0,0,0),(0,-1,0),(-1,-1,0),(-1,0,0),(0,0,0),(-1,0,0),
			(-1,1,0),(0,1,0),(0,0,0),(0,1,0),(1,1,0),(1,0,0),(0,0,0),(1,0,0),
			(1,-1,0),(0,-1,0)]
		
		elif curveType == 'null' :
			parameter = [(0,0,0),(0,0,0)]
		
		else : # null shape
			parameter = [(0,0,0),(0,0,0)]
		
		return parameter
